'---- Constant Valiables --------------------------------------------------------|

'チャートのフレームの見た目に関する設定
Const BoxMergin As Integer = 4 '枠番号の最小値、最大値をこの数ぶんだけ多くする
Const HEADER As Integer = 2 'ヘッダー部分の行数
Const initColumn As Integer = 3 'OXを描く列の初期値
Const ColuBlock = 24 '黒

'ソースデータの存在箇所に関する設定
Const StartSource As Long = 1 'ソースデータの先頭行番号
Const DateColumn As Long = 1 '日付が書かれる列(A列)
Const BeginPriceColumn As Integer = 3
Const HighPriceColumn As Integer = 4
Const LowPriceColumn As Integer = 5
Const EndPriceColumn As Integer = 6

Const HighBoxPositionColumn As Integer = 8 '高値の枠番号が書かれる列
Const LowBoxPositionColumn As Integer = 9 '安値の枠番号が書かれる列
Const BoxPositionColumn As Integer = 10 '終値の枠番号が書かれる列

Const BoxChangeStateColumn As Integer = 11 '各価格の前回からの変化状態が書かれる列




'デバッグモード設定
Const DebugMode As Boolean = False
Const DebugLevel As Integer = 1
Const DEBUG_WRITELOG As Boolean = False

'---- Global Valiables -----------------------------------------------------------|
'行番号
Dim startRow, lastRow As Long

'枠
Dim boxSize As Variant '１枠のサイズ
Dim maxBoxPrice, minBoxPrice As Variant '枠の値の最小値と最大値
Dim maxPositionNumber, minPositionNumber As Integer  '枠番号の最小値と最大値

Dim reversalAmount As Integer '転換枠数（何枠分の変化が起きたら次の列に転換するか）

Dim currentBoxChangeState As String   '各価格の前回からの変化状態（U:Up/D:Down/ST:Start/S:Stable)

Dim currentBoxPosition As Integer '今回の終値に対応する枠番号
Dim previousBoxPosition As Integer '前回の終値に対応する枠番号

Dim currentBoxPositionLow As Integer
Dim previousBoxPositionLow As Integer

Dim currentBoxPositionHigh As Integer
Dim previousBoxPositionHigh As Integer

Dim currentTrend As String '現在のトレンド(start/UpTrend/DownTrend)
Dim currentTrendBoxPosition As Integer '現在のトレンドにおける最新の枠番号。
                'currentBoxPositionとは必ずしも一致しない。たとえばトレンドは変わらないほどの
                '小さい上下変動が起きた場合、その変動内容はこの変数には反映されない。
Dim currentTrendEntry As Boolean  '現在のトレンドでエントリーをしたらTrue、まだならFalse。

Dim previousUpTrendLastBoxPosition As Integer '前回のUpトレンドでの最後の枠番号。エントリー判断に使う。0は無効値を意味する。
Dim previousDownTrendLastBoxPosition As Integer '前回のUpトレンドでの最後の枠番号。エントリー判断に使う。0は無効値を意味する。




'価格
Dim maxPrice, minPrice As Variant '価格の最小値と最大値

'日付
Dim latestDay, startDay, updateDay

'チャートの見た目
Dim pfWidth, pfHeight As Variant 'セルの幅と高さ
Dim brandName '銘柄名（例：UsdJpy）
Dim projectName 'このマクロの名前
Dim currentOXColumn As Long 'OXを描画する列
Dim reversalDateOnOff     As Boolean '転換日を表示するか否か
Dim reversalDate6DigitOnOff   As Boolean '転換日６桁表示をするか否か

'描画ルール
Dim OXRule As String

'UPとDOWNのフォント属性
Dim trendFontOXBold(2) As Variant
Dim trendFontOXColor(2) As Variant
Dim trendFontOXName(2) As Variant
Dim trendFontOXSize(2) As Variant
Dim trendFontOXCharactor(2) As Variant


'---- Subroutine and Functions -----------------------------------------------------------|


Sub updateChart() 'チャート作成

'---------------------------------------------------------------
'
    projectName = "PAFI v0.05"

' v0.01: PFMaker v6 のロジックと同じ
' v0.02: 更新条件およびトレンド転換条件を以下に変更：
'          アップトレンドのときは、高値がトレンド最新値よりも大きければ更新する（以前は終値で見ていた）
'                                  安値がトレンド最新値よりも転換枠数より低い値ならばトレンド転換とみなす
'                                  （以前は終値で見ていた）
'          ダウントレンドのときは、上記の逆を行う。
' v0.03: ・トレンド転換判定のバグを修正。(修正箇所：drawOX)
'        ・枠の配置ロジックの流用元バグを修正。例えば枠のサイズが0.2で価格が159.96の場合、PFMakerでは「160.0」の枠に配置されていたが、
'        　修正後は「159.8」の枠に配置される。(修正箇所：makeScale,getScapePosition,realRowNumber)
' v0.04: PFチャートの背景色のみぎはじがグレーになるようにした。チャートの端がどこかわかりやすくするため。
' v0.05: 「トレンド転換条件」改め「チャートの描画ルール」を３通り選択できるようにした。
'---------------------------------------------------------------
Dim currentRow As Long
Dim detectedChange As String
Dim logString As String


'『ソース』シートから設定情報を読み込み、初期値を設定する
Sheets("ソース").Select
initializeParameter


'枠のサイズや最大枠、最小枠を決める。
'『ソース』シートのそれぞれの価格がどの枠に相当するかを決めて、『ソース』シートに追記する。
makeScale


'『PF』シートにチャートの枠を描画する。
initializePFChart
Sheets("PF").Select
drawFrame


currentBoxChangeState = "ST" '変化検出状態の初期状態
currentTrend = "start" 'トレンドの初期状態
currentTrendEntry = False '現トレンドでエントリーを済ませたか否か。初期値は否(False)。

For currentRow = startRow To lastRow Step 1

    currentBoxPosition = CInt(Sheets("ソース").Cells(currentRow, BoxPositionColumn).Value)
    currentBoxPositionHigh = CInt(Sheets("ソース").Cells(currentRow, HighBoxPositionColumn).Value)
    currentBoxPositionLow = CInt(Sheets("ソース").Cells(currentRow, LowBoxPositionColumn).Value)

    If currentRow Mod 10 = 0 Then
        Application.StatusBar = CStr(currentRow) & " / " & CStr(lastRow) 'Excel画面左下のステータスバーに処理状況を表示
    End If
    
    '前日からの価格枠変化状況を検出し、『ソース』シートに記入する。
    detectedChange = detectChange(currentRow)
    Sheets("ソース").Cells(currentRow, BoxChangeStateColumn) = detectedChange
       
    
    '『PF』シートに今回のＯＸを描画する。
    Select Case OXRule
    Case "Close"
        drawOXClose currentRow
    Case "HighLow"
        drawOXHighLow currentRow
    Case "LowHigh"
        drawOXLowHigh currentRow
    End Select

    '前回の取引結果を確認し、取引記録に反映する。
    
    'エントリーを行い、取引記録に反映する。
''    currentTrendEntry = entryTrade(currentRow)
    
    'エグジットを行い、取引記録に反映する。
    
Next currentRow

pfChangeColSize (currentOXColumn)


MsgBox "終わりました。PFシートが更新されました。"
End Sub


Function initializeParameter()

    Dim msg, Style, Title
    Dim cellname
    

    startRow = StartSource
    lastRow = Sheets("ソース").Cells(Sheets("ソース").Rows.Count, "A").End(xlUp).Row


    boxSize = Sheets("メニュー").Cells(3, 3).Value
    reversalAmount = Sheets("メニュー").Cells(4, 3).Value
    brandName = Sheets("メニュー").Cells(6, 3).Value
    
    pfHeight = Sheets("メニュー").Cells(10, 3).Value
    pfWidth = Sheets("メニュー").Cells(11, 3).Value
    
    reversalDateOnOff = Sheets("メニュー").CheckBox1.Value
    reversalDate6DigitOnOff = Sheets("メニュー").CheckBox2.Value
    
    OXRule = Sheets("メニュー").Cells(24, 3).Value
    
    'UPとDOWNのフォント属性
    'UP
    cellname = ("C7")
    trendFontOXBold(0) = Sheets("メニュー").Range(cellname).Font.Bold
    trendFontOXColor(0) = Sheets("メニュー").Range(cellname).Font.Color
    trendFontOXName(0) = Sheets("メニュー").Range(cellname).Font.Name
    trendFontOXSize(0) = Sheets("メニュー").Range(cellname).Font.Size
    trendFontOXCharactor(0) = Sheets("メニュー").Range(cellname).Value

    cellname = ("C8")
    trendFontOXBold(1) = Sheets("メニュー").Range(cellname).Font.Bold
    trendFontOXColor(1) = Sheets("メニュー").Range(cellname).Font.Color
    trendFontOXName(1) = Sheets("メニュー").Range(cellname).Font.Name
    trendFontOXSize(1) = Sheets("メニュー").Range(cellname).Font.Size
    trendFontOXCharactor(1) = Sheets("メニュー").Range(cellname).Value

    
    If pfHeight <= 0 Then
            msg = "PFセル幅は0より大きい数値を指定してください"
            Style = vbCritical
            Title = "数値指定エラー"
            MsgBox msg, Style, Title
            End
    End If
    
    If pfWidth <= 0 Then
            msg = "PFセル高さは0より大きい数値を指定してください"
            Style = vbCritical
            Title = "数値指定エラー"
            MsgBox msg, Style, Title
            End
    End If
    
    
    If boxSize <= 0 Then
            msg = "枠単位数量は0より大きい数字にしてください"
            Style = vbCritical
            Title = "数値指定エラー"
            MsgBox msg, Style, Title
            End
    End If
                
    If reversalAmount < 2 Then
            msg = "転換枠数は 2以上の整数を指定してください"
            Style = vbCritical
            Title = "数値指定エラー"
            MsgBox msg, Style, Title
            End
    End If
                

    
    Sheets("ソース").Select
    
    
        
    maxPrice = Application.WorksheetFunction.Max(Sheets("ソース").Range(Cells(startRow, BeginPriceColumn), Cells(lastRow, EndPriceColumn)))
    minPrice = Application.WorksheetFunction.Min(Sheets("ソース").Range(Cells(startRow, BeginPriceColumn), Cells(lastRow, EndPriceColumn)))
    
    If DebugMode Then MsgBox ActiveSheet.Rows.Count
    
    startDay = ActiveSheet.Cells(startRow, 1).Value
    latestDay = ActiveSheet.Cells(lastRow, 1).Value



End Function


Function makeScale()
    
    Dim dTemp As Variant
    Dim sizeTemp As Variant
    Dim dPrice As Variant
    Dim boxSizeVariant As Variant
    
    
    Dim lPosition As Long
    Dim iCu As Long
    Dim lTemp As Long
    
    Dim Flag As Boolean



On Error GoTo ErrorTrap

''' kumiko mod start
minBoxPrice = Application.RoundDown((minPrice / boxSize), 0) * boxSize '価格の最小値を枠サイズで割り算した商に、枠サイズを掛けると、価格が配置される枠の下限値（価格帯の名前？みたいなもの）が得られる。
minBoxPrice = minBoxPrice - (BoxMergin * boxSize) 'マージンをとっておく。データの最小値よりもいくらか下の価格帯を最小値としておく。

maxBoxPrice = Application.RoundDown((maxPrice / boxSize), 0) * boxSize
maxBoxPrice = maxBoxPrice + (BoxMergin * boxSize)

''' kumiko mod end

    


''' Original start
'
'    lTemp = Application.RoundDown(minPrice / boxSize, 0)
'    minBoxPrice = (lTemp - BoxMergin) * boxSize
'
'    lTemp = Application.RoundDown(maxPrice / boxSize, 0)
'    maxBoxPrice = (lTemp + BoxMergin) * boxSize
''' Original end
    
    
    
    If DebugMode = True Then MsgBox "[scale] " & minBoxPrice & " -> " & maxBoxPrice


    For iCu = startRow To lastRow Step 1

30:     dPrice = Sheets("ソース").Cells(iCu, HighPriceColumn).Value
        lPosition = getScalePosition(dPrice, minBoxPrice)
        Sheets("ソース").Cells(iCu, HighBoxPositionColumn).Value = lPosition
        
20:     dPrice = Sheets("ソース").Cells(iCu, LowPriceColumn).Value
        lPosition = getScalePosition(dPrice, minBoxPrice)
        Sheets("ソース").Cells(iCu, LowBoxPositionColumn).Value = lPosition
        
10:     dPrice = Sheets("ソース").Cells(iCu, EndPriceColumn).Value
        lPosition = getScalePosition(dPrice, minBoxPrice)
        Sheets("ソース").Cells(iCu, BoxPositionColumn).Value = lPosition
        
        
    Next iCu

    maxPositionNumber = getScalePosition(maxBoxPrice, minBoxPrice)
    minPositionNumber = getScalePosition(minBoxPrice, minBoxPrice)
    

    
    Exit Function

ErrorTrap:
    MsgBox "エラー番号:" & Err.Number
    MsgBox "エラー内容：" & Err.Description
    MsgBox "マクロの行番号：" & Erl
    MsgBox "ヘルプファイル名" & Err.HelpContext
    MsgBox "プロジェクト名：" & Err.Source
    
    'Resume Next
    Exit Function

End Function


Function detectChange(currentRow As Long) As String

'    Dim currentBoxPosition, peviousBoxPosition As Integer

    currentBoxPosition = Sheets("ソース").Cells(currentRow, BoxPositionColumn).Value
    If currentRow > 1 Then
        previousBoxPosition = Sheets("ソース").Cells(currentRow - 1, BoxPositionColumn).Value
    End If
    
    Select Case currentBoxChangeState
    
    Case "ST"
        detectChange = "ST"
        currentBoxChangeState = "S"
    
    Case Else
        If currentBoxPosition < previousBoxPosition Then
            detectChange = "D"
            currentBoxChangeState = "D"
        ElseIf currentBoxPosition > previousBoxPosition Then
            detectChange = "U"
            currentBoxChangeState = "U"
        Else
            'Box Position(枠の値）に変化が無い場合は、現状維持する。
            detectChange = currentBoxChangeState
        End If
    
    End Select
    
     
End Function


Function drawOXHighLow(currentRow As Long)

    Dim reversalOccur As Boolean
    Dim trendProceeding As Boolean  '前回と今回で枠番号がトレンド方向に進行したか否か
    
    logString = "RowNumber:" & CStr(currentRow) & " | curBoxPos = " & CStr(currentBoxPosition) & ", curTrendPos = " & CStr(currentTrendBoxPosition) & ", currentBoxState = " & CStr(currentBoxChangeState) & ", trend = " & CStr(currentTrend)
    writeLog (logString)
    
    
    Select Case currentTrend
    
    Case "start"
        Select Case currentBoxChangeState
        Case "ST"
            currentTrendBoxPosition = currentBoxPosition
        Case "S"
            currentTrendBoxPosition = currentBoxPosition
        Case "U"
            drawTheLine currentTrendBoxPosition, currentBoxPosition, "UpTrend"
            currentTrendBoxPosition = currentTrendBoxPosition + 1 '１枠上から描く
            stmp = drawDayStr(currentBoxPosition, "UpTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
            
            currentTrend = "UpTrend"
            currentTrendBoxPosition = currentBoxPosition
        Case "D"
            drawTheLine currentTrendBoxPosition, currentBoxPosition, "DownTrend"
            currentTrendBoxPosition = currentTrendBoxPosition - 1 '１枠下から描く
            stmp = drawDayStr(currentBoxPosition, "DownTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
            currentTrend = "DownTrend"
            currentTrendBoxPosition = currentBoxPosition
        Case Else
        End Select
    
    Case "UpTrend"
            trendProceeding = judgeTrendProceeding(currentTrend, currentBoxPositionHigh, currentTrendBoxPosition)
            If (trendProceeding) Then '値がトレンド方向に増えた
                drawTheLine currentTrendBoxPosition, currentBoxPositionHigh, currentTrend
                stmp = drawDayStr(currentBoxPositionHigh, "UpTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPositionHigh
            ElseIf (Abs(currentBoxPositionLow - currentTrendBoxPosition) >= reversalAmount) Then '転換条件に適合した
                currentTrendEntry = False
                previousUpTrendLastBoxPosition = currentTrendBoxPosition
                                
                moveToNextColumn
                
                currentTrendBoxPosition = currentTrendBoxPosition - 1 '転換後は１枠下から描く
                drawTheLine currentTrendBoxPosition, currentBoxPositionLow, "DownTrend"
                stmp = drawDayStr(currentBoxPositionLow, "DownTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPositionLow
                currentTrend = "DownTrend"
            Else
                'なにもしない
            End If
    
    Case "DownTrend"
            trendProceeding = judgeTrendProceeding(currentTrend, currentBoxPositionLow, currentTrendBoxPosition)
            If (trendProceeding) Then '値がトレンド方向に増えた
                drawTheLine currentTrendBoxPosition, currentBoxPositionLow, currentTrend
                stmp = drawDayStr(currentBoxPositionLow, "DownTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPositionLow
            ElseIf (Abs(currentBoxPositionHigh - currentTrendBoxPosition) >= reversalAmount) Then '転換条件に適合した
                currentTrendEntry = False
                previousDownTrendLastBoxPosition = currentTrendBoxPosition
                
                moveToNextColumn
                
                currentTrendBoxPosition = currentTrendBoxPosition + 1 '転換後は１枠上から描く
                drawTheLine currentTrendBoxPosition, currentBoxPositionHigh, "UpTrend"
                stmp = drawDayStr(currentBoxPositionHigh, "UpTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPositionHigh
                currentTrend = "UpTrend"
            Else
                'なにもしない
            End If
    
    
    
    End Select
        
    
End Function

Function drawOXLowHigh(currentRow As Long)

    Dim reversalOccur As Boolean
    Dim trendProceeding As Boolean  '前回と今回で枠番号がトレンド方向に進行したか否か
    
    logString = "RowNumber:" & CStr(currentRow) & " | curBoxPos = " & CStr(currentBoxPosition) & ", curTrendPos = " & CStr(currentTrendBoxPosition) & ", currentBoxState = " & CStr(currentBoxChangeState) & ", trend = " & CStr(currentTrend)
    writeLog (logString)
    
    
    Select Case currentTrend
    
    Case "start"
        Select Case currentBoxChangeState
        Case "ST"
            currentTrendBoxPosition = currentBoxPosition
        Case "S"
            currentTrendBoxPosition = currentBoxPosition
        Case "U"
            drawTheLine currentTrendBoxPosition, currentBoxPosition, "UpTrend"
            currentTrendBoxPosition = currentTrendBoxPosition + 1 '１枠上から描く
            stmp = drawDayStr(currentBoxPosition, "UpTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
            
            currentTrend = "UpTrend"
            currentTrendBoxPosition = currentBoxPosition
        Case "D"
            drawTheLine currentTrendBoxPosition, currentBoxPosition, "DownTrend"
            currentTrendBoxPosition = currentTrendBoxPosition - 1 '１枠下から描く
            stmp = drawDayStr(currentBoxPosition, "DownTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
            currentTrend = "DownTrend"
            currentTrendBoxPosition = currentBoxPosition
        Case Else
        End Select
    
    Case "UpTrend"
            trendProceeding = judgeTrendProceeding(currentTrend, currentBoxPositionHigh, currentTrendBoxPosition)
            If (Abs(currentBoxPositionLow - currentTrendBoxPosition) >= reversalAmount) Then '転換条件に適合した
                currentTrendEntry = False
                previousUpTrendLastBoxPosition = currentTrendBoxPosition
                                
                moveToNextColumn
                
                currentTrendBoxPosition = currentTrendBoxPosition - 1 '転換後は１枠下から描く
                drawTheLine currentTrendBoxPosition, currentBoxPositionLow, "DownTrend"
                stmp = drawDayStr(currentBoxPositionLow, "DownTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPositionLow
                currentTrend = "DownTrend"
            ElseIf (trendProceeding) Then '値がトレンド方向に増えた
                drawTheLine currentTrendBoxPosition, currentBoxPositionHigh, currentTrend
                stmp = drawDayStr(currentBoxPositionHigh, "UpTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPositionHigh
            Else
                'なにもしない
            End If
    
    Case "DownTrend"
            trendProceeding = judgeTrendProceeding(currentTrend, currentBoxPositionLow, currentTrendBoxPosition)
            If (Abs(currentBoxPositionHigh - currentTrendBoxPosition) >= reversalAmount) Then '転換条件に適合した
                currentTrendEntry = False
                previousDownTrendLastBoxPosition = currentTrendBoxPosition
                
                moveToNextColumn
                
                currentTrendBoxPosition = currentTrendBoxPosition + 1 '転換後は１枠上から描く
                drawTheLine currentTrendBoxPosition, currentBoxPositionHigh, "UpTrend"
                stmp = drawDayStr(currentBoxPositionHigh, "UpTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPositionHigh
                currentTrend = "UpTrend"
            ElseIf (trendProceeding) Then '値がトレンド方向に増えた
                drawTheLine currentTrendBoxPosition, currentBoxPositionLow, currentTrend
                stmp = drawDayStr(currentBoxPositionLow, "DownTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPositionLow
            Else
                'なにもしない
            End If
    
    
    
    End Select
        
    
End Function

Function drawOXClose(currentRow As Long)

    Dim reversalOccur As Boolean
    Dim trendProceeding As Boolean  '前回と今回で枠番号がトレンド方向に進行したか否か
    
    logString = "RowNumber:" & CStr(currentRow) & " | curBoxPos = " & CStr(currentBoxPosition) & ", curTrendPos = " & CStr(currentTrendBoxPosition) & ", currentBoxState = " & CStr(currentBoxChangeState) & ", trend = " & CStr(currentTrend)
    writeLog (logString)
    
    
    Select Case currentTrend
    
    Case "start"
        Select Case currentBoxChangeState
        Case "ST"
            currentTrendBoxPosition = currentBoxPosition
        Case "S"
            currentTrendBoxPosition = currentBoxPosition
        Case "U"
            drawTheLine currentTrendBoxPosition, currentBoxPosition, "UpTrend"
            currentTrendBoxPosition = currentTrendBoxPosition + 1 '１枠上から描く
            stmp = drawDayStr(currentBoxPosition, "UpTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
            
            currentTrend = "UpTrend"
            currentTrendBoxPosition = currentBoxPosition
        Case "D"
            drawTheLine currentTrendBoxPosition, currentBoxPosition, "DownTrend"
            currentTrendBoxPosition = currentTrendBoxPosition - 1 '１枠下から描く
            stmp = drawDayStr(currentBoxPosition, "DownTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
            currentTrend = "DownTrend"
            currentTrendBoxPosition = currentBoxPosition
        Case Else
        End Select
    
    Case "UpTrend"
        Select Case currentBoxChangeState
        Case "U"
            trendProceeding = judgeTrendProceeding(currentTrend, currentBoxPosition, currentTrendBoxPosition)
            If (trendProceeding) Then '値がトレンド方向に増えた
                drawTheLine currentTrendBoxPosition, currentBoxPosition, currentTrend
                stmp = drawDayStr(currentBoxPosition, "UpTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPosition
            End If
            
        Case "D"
            If (Abs(currentBoxPosition - currentTrendBoxPosition) >= reversalAmount) Then '転換条件に適合した
                currentTrendEntry = False
                previousUpTrendLastBoxPosition = currentTrendBoxPosition
                                
                moveToNextColumn
                
                currentTrendBoxPosition = currentTrendBoxPosition - 1 '転換後は１枠下から描く
                drawTheLine currentTrendBoxPosition, currentBoxPosition, "DownTrend"
                stmp = drawDayStr(currentBoxPosition, "DownTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPosition
                currentTrend = "DownTrend"
            Else
                'なにもしない
            End If
        Case Else
            'ありえない
        End Select
    
    Case "DownTrend"
        Select Case currentBoxChangeState
        Case "D"
            trendProceeding = judgeTrendProceeding(currentTrend, currentBoxPosition, currentTrendBoxPosition)
            If (trendProceeding) Then '値がトレンド方向に増えた
                drawTheLine currentTrendBoxPosition, currentBoxPosition, currentTrend
                stmp = drawDayStr(currentBoxPosition, "DownTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPosition
            End If
            
        Case "U"
            If (Abs(currentBoxPosition - currentTrendBoxPosition) >= reversalAmount) Then '転換条件に適合した
                currentTrendEntry = False
                previousDownTrendLastBoxPosition = currentTrendBoxPosition
                
                moveToNextColumn
                
                currentTrendBoxPosition = currentTrendBoxPosition + 1 '転換後は１枠上から描く
                drawTheLine currentTrendBoxPosition, currentBoxPosition, "UpTrend"
                stmp = drawDayStr(currentBoxPosition, "UpTrend", (Sheets("ソース").Cells(currentRow, DateColumn).Value))
                currentTrendBoxPosition = currentBoxPosition
                currentTrend = "UpTrend"
            Else
                'なにもしない
            End If
        Case Else
            'ありえない
        End Select
    
    
    
    End Select
        
    
End Function




Sub writeLog(msg As String)
    Dim fso As Object, log As Object
    Dim filename As String
    
    If DEBUG_WRITELOG Then
        
        filename = "C:\Work\PAFI_0.02_Report" & Month(Now()) & Day(Now()) & Hour(Now()) & Minute(Now()) & ".log"
        
        Set fso = CreateObject("Scripting.FileSystemObject")
        If fso.FileExists(filename) = False Then
            fso.CreateTextFile filename
        End If
        
        Set log = fso.OpenTextFile(filename, 8)
        log.WriteLine Now & vbTab & msg
        Set log = Nothing
        Set fso = Nothing
        
    End If
    
End Sub

Function pfChangeColSize(last As Long)

    With Sheets("PF").Range(Columns(initColumn), Columns(last))
        .ColumnWidth = pfWidth
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
    End With
        
    
End Function


Function FontAttribute(mode)
    Dim cellname

    If mode = "U" Then cellname = ("C7")
    If mode = "D" Then cellname = ("C8")
    
    If mode = "color" Then FontAttribute = Sheets("メニュー").Range(cellname).Font.Color
    If mode = "value" Then FontAttribute = Sheets("メニュー").Range(cellname).Value
    If mode = "name" Then FontAttribute = Sheets("メニュー").Range(cellname).Font.Name
    If mode = "size" Then FontAttribute = Sheets("メニュー").Range(cellname).Font.Size
    If mode = "bold" Then FontAttribute = Sheets("メニュー").Range(cellname).Font.Bold

'    ActiveCell .ColumnWidth = ActiveCell.ColumnWidth
'        .RowHeight = ActiveCell.Width
        
End Function

Function FontAttributeDayStr(mode)
'R1.06’C‰A

    Dim cellname

    cellname = ("C21")
    
    If mode = "color" Then FontAttributeDayStr = Sheets("メニュー").Range(cellname).Font.Color
    If mode = "name" Then FontAttributeDayStr = Sheets("メニュー").Range(cellname).Font.Name
    If mode = "size" Then FontAttributeDayStr = Sheets("メニュー").Range(cellname).Font.Size
    If mode = "bold" Then FontAttributeDayStr = Sheets("メニュー").Range(cellname).Font.Bold

        
End Function

Function initializePFChart()
    
    Sheets("PF").Cells.Delete Shift:=xlUp
    Sheets("PF").Cells.Interior.ColorIndex = xlNone

End Function


Function drawFrame()

    Dim lIne As Long
    Dim sPlitpstr As Variant

    Columns("B:B").Select
    ActiveWindow.FreezePanes = True
    

    
    If (boxSize < 1) Then
   
        If (boxSize * 10) >= 1 Then
            sPlitpstr = "0.0_ "
        Else
            If (boxSize * 100) >= 1 Then
                sPlitpstr = "0.00_ "
            Else
                If (boxSize * 1000) >= 1 Then
                    sPlitpstr = "0.000_ "
                Else
                    If (boxSize * 10000) >= 1 Then
                        sPlitpstr = "0.0000_ "
                    Else
                        If (boxSize * 100000) >= 1 Then
                            sPlitpstr = "0.00000_ "
                        End If
                    End If
                End If
            End If
        End If
    Else
         sPlitpstr = "0_ "
    
    End If
    
    'Debug.Print sPlitpStr
    'MsgBox sPlitpstr
    
    If IsEmpty(sPlitpstr) = False Then
            Sheets("PF").Columns(1).NumberFormatLocal = sPlitpstr

    End If
    
    

    Sheets("PF").Cells(1, 1) = brandName
    Sheets("PF").Cells(2, 3) = "S:" & startDay
    Sheets("PF").Cells(2, 9) = "E:" & latestDay
    Sheets("PF").Cells(1, 3) = projectName
    Sheets("PF").Cells(1, 9) = "[ " & boxSize & " / " & reversalAmount & " ]"
        
    lIne = HEADER + 1
    limitc = (maxBoxPrice - minBoxPrice) / boxSize
    
    Sheets("PF").Columns(1).ColumnWidth = 8
    Sheets("PF").Columns(2).ColumnWidth = 5

    For i = 0 To limitc Step 1
        Sheets("PF").Cells(lIne + i, 1).Value = maxBoxPrice - boxSize * i
        Sheets("PF").Cells(lIne + i, 2).Value = getScalePosition(maxBoxPrice - boxSize * i, minBoxPrice)
        'Sheets("PF").Rows(lIne + i).RowHeight = pfHeight
        
    Next i

  
    Sheets("PF").Rows(lIne).Resize(limitc).RowHeight = pfHeight 'R105?A’C‰A

    
    currentOXColumn = initColumn
    
    

End Function

Function drawDayStr(position As Integer, mode, dayStr)

Dim dtsr As String

    If reversalDateOnOff <> True Then
        Exit Function
    End If


    If reversalDate6DigitOnOff = True Then
        dtsr = Mid(dayStr, 3, 2) + Mid(dayStr, 6, 2) + Right(dayStr, 2)
        'MsgBox dayStr + " " + dtsr
    Else
        dtsr = dayStr
    End If
    
    
    


    If mode = "UpTrend" Then
        With Sheets("PF").Cells(realRowNumber(position) - 1, currentOXColumn)
                            .NumberFormatLocal = "@"
                            .Value = dtsr
                            .Font.Color = FontAttributeDayStr("color")
                            .Font.Name = FontAttributeDayStr("name")
                            .Font.Size = FontAttributeDayStr("size")
                            .Font.Bold = FontAttributeDayStr("bold")
        End With
    ElseIf mode = "DownTrend" Then
        With Sheets("PF").Cells(realRowNumber(position) + 1, currentOXColumn)
                            .NumberFormatLocal = "@"
                            .Value = dtsr
                            .Font.Color = FontAttributeDayStr("color")
                            .Font.Name = FontAttributeDayStr("name")
                            .Font.Size = FontAttributeDayStr("size")
                            .Font.Bold = FontAttributeDayStr("bold")
        End With
    End If

End Function

Function drawOneCell(boxPosition As Integer, mode)

    Dim rowNumber As Long
    Dim modeIndex As Integer

    drawOneCell = 1 '初期値として、正常終了を意味する１を代入
    If mode = "UpTrend" Then modeIndex = 0 Else modeIndex = 1
        
    rowNumber = realRowNumber(boxPosition)
    
    With Sheets("PF").Cells(rowNumber, currentOXColumn)
                                .Value = trendFontOXCharactor(modeIndex)
                                .Font.Color = trendFontOXColor(modeIndex)
                                .Font.Name = trendFontOXName(modeIndex)
                                .Font.Size = trendFontOXSize(modeIndex)
                                .Font.Bold = trendFontOXBold(modeIndex)
    End With
    

End Function

Function drawTheLine(startBoxPosition As Integer, endBoxPosition As Integer, mode As String)
    
    Dim iii As Long
    Dim logString As String
    
    If startBoxPosition = endBoxPosition Then
        drawOneCell startBoxPosition, mode
    
    ElseIf startBoxPosition > endBoxPosition Then
        For iii = 0 To (startBoxPosition - endBoxPosition) Step 1
            drawOneCell (startBoxPosition - iii), mode
        Next iii
    
    ElseIf startBoxPosition < endBoxPosition Then
        For iii = 0 To (endBoxPosition - startBoxPosition) Step 1
            drawOneCell (startBoxPosition + iii), mode
        Next iii
    End If

End Function


Function realRowNumber(positionNumber As Integer) As Long
    
    realRowNumber = HEADER + (maxPositionNumber - positionNumber) + 1
    
    
    
    
''' original
'    Dim lIne As Long
'    Dim rEt As Long
'
'
'lIne = HEADER + 1
'    limitc = (maxBoxPrice - minBoxPrice) / boxSize
'
'    rEt = limitc - postion_nu + lIne
'    realRowNumber = rEt



logString = "draw at " & CStr(realRowNumber)
writeLog (positionNumber)


End Function



Function PorMprice(price, mode) As Double
' R1.06
' price?d?a?A?E1?X?P?[???a?U???I‰o?I‰??i?d?O?・
' ?≫?Y?¢?g?p?A?・
    
        If mode = "U" Then
            PorMprice = price + boxSize
        ElseIf mode = "D" Then
            PorMprice = price - boxSize
        End If
End Function




Function getScalePosition(price As Variant, Min_Price As Variant) As Long


getScalePosition = Application.RoundDown(((price - Min_Price) / boxSize), 0) '価格から最小価格を引いた値を、枠の単位数量で割った商が、何番目の枠かを示す。RounDownは商を算出している。

If getScalePosition < 0 Then
    writeLog ("getScalePosition Error: position is less than 0")
    getScalePosition = 0
End If
    
''' original
'    Dim sift_p As Variant
'    Dim dTemp As Variant
'    Dim boxSizeDouble As Variant
'
'    Dim lTemp As Long
'
'    sift_p = price - Min_Price
'    boxSizeDouble = boxSize
'
'    If sift_p = 0 Then
'        getScalePosition = 0
'        Exit Function
'    End If
'
'    dTemp = Round(sift_p / boxSizeDouble)
'    If dTemp < 1 Then
'        getScalePosition = 0
'        Exit Function
'    End If
'
'    lTemp = Application.RoundDown(dTemp, 0)
'
'    getScalePosition = lTemp
''' original

End Function

Function moveToNextColumn()
   
   writeLog ("Next Column")
      
    
    currentOXColumn = currentOXColumn + 1
    
    With Sheets("PF").Range(Columns(currentOXColumn), Columns(currentOXColumn))
        .Interior.ColorIndex = xlNone
    End With

    
    ' 右端に色をつける
    With Sheets("PF").Range(Columns(currentOXColumn + 1), Columns(currentOXColumn + 1))
        .Interior.ColorIndex = 15
    End With

    
End Function



Function GetCol()

    GetCol = currentOXColumn

End Function


Function judgeTrendProceeding(currentTrend As String, currentPosition As Integer, previousPosition As Integer) As Boolean

    'トレンドが継続している場合のために、前回からトレンド方向に進んだか否かを判断する
    trendProceeding = False
    Select Case currentTrend
    Case "UpTrend"
        If currentPosition > previousPosition Then
            judgeTrendProceeding = True
        End If
    Case "DownTrend"
        If currentPosition < previousPosition Then
            judgeTrendProceeding = True
        End If
    End Select

End Function


Function entryTrade(currentRowNum As Long) As Boolean
' True: エントリーする  False:しない

    entryTrade = False
    
    
    
    If currentTrendEntry = True Then
    '  現在のトレンド（現在の列）ですでにエントリー済なら　何もせず終了する
        entryTrade = True
        Exit Function
    ElseIf previousUpTrendLastBoxPosition And previousDownTrendLastBoxPosition = 0 Then
    '  まだトレンドが１つしかできていない状態なので、何もせず終了する
        Exit Function
    Else
    '  現在枠が同族左隣の枠を超えていたら　「エントリーする」　それ以外は「しない」
    '    「エントリーする」：　対象セルの色をオレンジに変える
        Select Case currentTrend
        
        Case "UpTrend"
            If previousUpTrendLastBoxPosition < currentTrendBoxPosition Then
                'エントリーする
                entryTrade = True
                Sheets("PF").Cells(realRowNumber(currentBoxPosition), currentOXColumn).Interior.ColorIndex = 46
            End If
            
        Case "DownTrend"
            If previousDownTrendLastBoxPosition > currentTrendBoxPosition Then
                'エントリーする
                entryTrade = True
                Sheets("PF").Cells(realRowNumber(currentBoxPosition), currentOXColumn).Interior.ColorIndex = 46
            End If
        
        Case Else
            'まだトレンドがわかっていない状態ではエントリーしない
            Exit Function
        
        End Select
        
    
    
    End If



End Function



Sub testWarizan()

Dim price As Variant
Dim minPrice As Variant
Dim boxSize As Variant
Dim resultCalculation As Variant
Dim position As Integer

price = 152.199
minPrice = 151.2
boxSize = 0.2

resultCalculation = price - minPrice
resultCalculation = Round(resultCalculation / boxSize)
position = Round((price - minPrice) / boxSize)


End Sub



Private Sub Workbook_Open()

End Sub



